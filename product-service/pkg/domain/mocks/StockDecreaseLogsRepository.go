// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	context "context"
	domain "ecommerce/product-service/pkg/domain"

	mock "github.com/stretchr/testify/mock"
)

// StockDecreaseLogsRepository is an autogenerated mock type for the StockDecreaseLogsRepository type
type StockDecreaseLogsRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields: ctx, log
func (_m *StockDecreaseLogsRepository) Create(ctx context.Context, log *domain.StockDecreaseLog) error {
	ret := _m.Called(ctx, log)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *domain.StockDecreaseLog) error); ok {
		r0 = rf(ctx, log)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetByOrderId provides a mock function with given fields: ctx, orderId
func (_m *StockDecreaseLogsRepository) GetByOrderId(ctx context.Context, orderId int64) (domain.StockDecreaseLog, error) {
	ret := _m.Called(ctx, orderId)

	var r0 domain.StockDecreaseLog
	if rf, ok := ret.Get(0).(func(context.Context, int64) domain.StockDecreaseLog); ok {
		r0 = rf(ctx, orderId)
	} else {
		r0 = ret.Get(0).(domain.StockDecreaseLog)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, int64) error); ok {
		r1 = rf(ctx, orderId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewStockDecreaseLogsRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewStockDecreaseLogsRepository creates a new instance of StockDecreaseLogsRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewStockDecreaseLogsRepository(t mockConstructorTestingTNewStockDecreaseLogsRepository) *StockDecreaseLogsRepository {
	mock := &StockDecreaseLogsRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
